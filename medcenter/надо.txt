1.	Вносим изменения в основной прайс. Вместо pls_price делаем pls_price_ot и добавляем pls_price_do.
2.	Регистратор теперь в выпадающем списке услуг видит либо одну цену либо диапозон цен, логика такая,
	если первая цена (pls_price_ot) заполнена а вторая цена(pls_price_do) не заполнена, то выводим первую цену,
	а если обе цены заполнены выводим диапазон и эти цены являются границами за которые выходить нельзя.
3.	У регистратора всё относительно просто, при добавлении услуги к приёму выбирается нижняя граница цены
	и по ней расчитывается интерес врача. Нужно предусмотреть статус для услуги, оплачена или нет. Сделать что-то
	вроде кнопочки или выпадающего списка.
4.	Доделать страницу услуги(прайс), а именно сделать различные сортировки и завязать на клиентские переменные.
	Сделать распечатку прайса в PDF .

5.	У врача при выборе услуги будет еще одна кнопочка "редактировать цену", т.е придётся сделать проверку, что бы
	цена была в диапазоне.
6.	Сделать проверки для услуги что бы вторая цена не была равной или меньшей первой цены.
7.	Нужно исправить в ресепшене дату добавления сейчас добавляется дата а время нули 2014-09-10 00:00:00.000
	а нужно что бы учитывалось время 2014-09-10 12:33:27.000
8.	Если у врача нет в прайсе услуг то выпадающий список пустой и если нажать на кнопочку добавить
	вываливается ошибка reception.cfc 209

9.	Нужен для регистратуры договор согласия.
	И еще какой-то договор на оказание медецинских услуг.

10.	Больничные листы добавить в программу, у пациента должно всплывать предупреждение что не закрыт
	больничный лист.	


	...


	"Нужно сделать в ближайшее время."

1.	У кого есть роль главного врача, разрешить просматривать записи остальных врачей.
	(В смысле видеть расписание врачей - регистратура).
2.	В данный момент врачи могут менять записи у других врачей, это нужно исправить.
	(На будущее подумать как добавить роль владельца(owner)объекта в RBAC).
3.	Для главного врача сделать редирект записи пациента из регистратуры в кабинет.
4.	В картотеке у пациента в "записях к врачам" сделать разворачивающиеся списки.
5.	Прикрутить плагин поиск в выпадающем списке услуг врача.
6.	В приём врача (в шаблон) добавить лист нетрудоспособности, или придумать более продвинутый механизм
	учёта листов нетрудоспособности. (отдельная таблица с привязкой по id к пациенту).
7.	Сделать проверку в "записи пациента к врачу" (время окончания приёма не должно быть меньше начала приёма).
8.	Исправить ошибку в "записи к врачу", если не выбрать пациента и нажать на редактирование услуги, то
	произойдет ошибка.
9.	Сделать все возможные сортировки ( пациентов, врачей, пользователей и т.д.), и сохранять выбранную
	сортировку в клиентской переменной.
10.	Сделать редактирование графиков врачей как в таблице с множественными изменениями.
11.	Подумать как добавить номер кабинета, в котором принимает врач. И потом сделать сортировку по кабинетам и
	проверку, что бы врачи не пересекались. Можно добавить номер кабинета к графику врача.
12.	Для стоматологии сделать возможность выставлять цену для выбранной услуги (но может быть в определённом диапазоне).
13.	У пациента предусмотреть внесение некой суммы (что-то вроде кредита) и отслеживать изменения (может быть статус 
	внесены средства или нет).
14.	Сейчас по умолчанию выставляется время приёма 30 минут, есть предложение сделать в настройках для каждого врача свой
	промежуток времени (15, 20, 25 мин. и т.д.).
15.	В графике врачей закрепить шапку таблицы при прокрутке вниз.
16.	Общие функции, такие как вывод телефона и проверка чекбоксов, вынести в отдельную библиотеку.
17.	В шаблоне в текстовом поле если добавить знак < то отсекается при выводе и не добавляется в варианты.
	Нужно придумать парсинг текста и заменять символы на коды !!!!!

18.	Изменить в ректоскопии шаблон, вместо Врач УЗИ писать Врач.

-----------------------------------------------------------------------------------------------------------------------------

1.	Вертится в голове идея переделать RBAC. Сделать для каждой записи CRUD, предусмотреть роль владельца, группы,
	исключения (когда у пользователя две роли, но одновременно может работать под одной). Предусмотреть механизм удаления
	любой записи под любым пользователем но с запросом прав администратора.
2.	Предусмотреть вести логгирование для изменения любой записи.
3.	Есть идея как формы вынести в отдельные модули(вьюверы) и сделать их более умными, т.е. не заморачивать с параметрами 
	которые приходят в урле.